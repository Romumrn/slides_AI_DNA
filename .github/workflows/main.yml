# @format

name: Sync Repos

on:
  push:
    branches:
      - main
  # You can add more triggers, such as scheduled events
  # schedule:
  #   - cron: '0 0 * * *'

jobs:
  sync_repositories:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up SSH key
        run: |
          mkdir -p ~/.ssh
          echo "$SSH_PRIVATE_KEY" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan gitlab.in2p3.fr >> ~/.ssh/known_hosts
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Configure git user
        run: |
          git config --global user.name "Romuald MARIN"
          git config --global user.email "romuald.marin@france-bioinformatique.fr"
          git clone git@gitlab.in2p3.fr:ifb-biosphere/wp4-mudis4ls/slides_ai_dna.git
          
      # Step 3: Sync with GitLab repository
      - name: Sync to GitLab repository
        run: |
          # Clone the GitLab repository
          git clone git@gitlab.in2p3.fr:ifb-biosphere/wp4-mudis4ls/slides_ai_dna.git gitlab-repo
          cd gitlab-repo

          # Add GitHub as a remote and fetch updates
          git remote add github https://github.com/Romumrn/slides_AI_DNA.git
          git fetch github

          # Merge changes from GitHub to GitLab
          git merge github/main --allow-unrelated-histories || true

          # Automatically resolve conflicts by keeping GitHub changes
          git checkout --theirs .
          git add .
          git commit -m "Synced changes from GitHub repository" || echo "No conflicts to resolve"

          # Push changes back to GitLab
          git push origin main
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}

